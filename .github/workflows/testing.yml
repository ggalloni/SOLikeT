name: Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:

          - name: latest supported versions
            os: ubuntu-latest
            python-version: '3.11'
            tags: 'cov'

          - name: oldest supported versions
            os: ubuntu-latest
            python-version: '3.10'
            tags: ''

          - name: macOS latest
            os: macos-latest
            python-version: '3.11'
            tags: ''

          - name: Windows latest
            os: windows-latest
            python-version: '3.11'
            tags: ''
            env:
              PYTHONIOENCODING: utf-8
              PYTHONUTF8: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          pip install uv
          uv python install ${{ matrix.python-version }}
          uv python pin ${{ matrix.python-version }}

      - name: Install SOLikeT dependencies (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          uv sync --locked --extra dev --extra emulator
      - name: Install SOLikeT dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          uv sync --locked --extra dev

      - name: Run tests
        env:
          COBAYA_PACKAGES_PATH: ./cobaya_packages
        run: |
          uv run cobaya-install mflike.TTTEEE --no-set-global
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            uv run cobaya-install planck_2018_highl_plik.TTTEEE_lite_native --no-set-global
          fi
          uv run pytest -vv --durations=10

      - if: contains(matrix.tags, 'cov')
        name: Report Coverage
        uses: codecov/codecov-action@v3
